name: Test Rust SDK

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-rust-sdk:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust-version: ['stable']

    steps:
    - uses: actions/checkout@v3
    
    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust-version }}
        profile: minimal
        override: true
        components: rustfmt, clippy
        
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          ~/.cargo/bin/cargo-tarpaulin
          rust/target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        
    - name: Check formatting
      working-directory: ./rust
      run: |
        cargo fmt --all -- --check
        
    - name: Lint with clippy
      working-directory: ./rust
      run: |
        cargo clippy -- -D warnings
        
    - name: Build
      working-directory: ./rust
      run: |
        cargo build --verbose
        
    - name: Run tests
      working-directory: ./rust
      run: |
        cargo test --verbose
        
    - name: Install cargo-tarpaulin
      run: |
        if ! command -v cargo-tarpaulin &> /dev/null; then
          cargo install cargo-tarpaulin
        fi
        
    - name: Generate coverage report
      working-directory: ./rust
      run: |
        cargo tarpaulin --out Xml --output-dir ./
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./rust/cobertura.xml
        flags: rust
        name: rust-sdk-codecov
        fail_ci_if_error: true
